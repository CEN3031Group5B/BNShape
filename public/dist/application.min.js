"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ngMessages","ui.router","ui.bootstrap","ui.utils","angularFileUpload"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider","$httpProvider",function($locationProvider,$httpProvider){$locationProvider.html5Mode(!0).hashPrefix("!"),$httpProvider.interceptors.push("authInterceptor")}]),angular.module(ApplicationConfiguration.applicationModuleName).run(["$rootScope","$state","Authentication",function($rootScope,$state,Authentication){function storePreviousState(state,params){state.data&&state.data.ignoreState||($state.previous={state:state,params:params,href:$state.href(state,params)})}$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){if(toState.data&&toState.data.roles&&toState.data.roles.length>0){var allowed=!1;toState.data.roles.forEach(function(role){return void 0!==Authentication.user.roles&&-1!==Authentication.user.roles.indexOf(role)?(allowed=!0,!0):void 0}),allowed||(event.preventDefault(),void 0!==Authentication.user&&"object"==typeof Authentication.user?$state.go("forbidden"):$state.go("authentication.signin").then(function(){storePreviousState(toState,toParams)}))}}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){storePreviousState(fromState,fromParams)})}]),angular.element(document).ready(function(){if(window.location.hash&&"#_=_"===window.location.hash)if(window.history&&history.pushState)window.history.pushState("",document.title,window.location.pathname);else{var scroll={top:document.body.scrollTop,left:document.body.scrollLeft};window.location.hash="",document.body.scrollTop=scroll.top,document.body.scrollLeft=scroll.left}angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("core.admin",["core"]),ApplicationConfiguration.registerModule("core.admin.routes",["ui.router"]),ApplicationConfiguration.registerModule("orders",["ui.bootstrap.modal"]),ApplicationConfiguration.registerModule("products",["ngCookies"]),ApplicationConfiguration.registerModule("users",["core"]),ApplicationConfiguration.registerModule("users.admin",["core.admin"]),ApplicationConfiguration.registerModule("users.admin.routes",["core.admin.routes"]),angular.module("core.admin").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Admin",state:"admin",type:"dropdown",roles:["admin"]})}]),angular.module("core.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin",{"abstract":!0,url:"/admin",template:"<ui-view/>",data:{roles:["admin"]}})}]),angular.module("core").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Team",state:"products.list",type:"",roles:["*"]}),Menus.addMenuItem("topbar",{title:"About Us",state:"products.list",type:"",roles:["*"]})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise(function($injector,$location){$injector.get("$state").transitionTo("not-found",null,{location:!1})}),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/client/views/home.client.view.html"}).state("not-found",{url:"/not-found",templateUrl:"modules/core/client/views/404.client.view.html",data:{ignoreState:!0}}).state("bad-request",{url:"/bad-request",templateUrl:"modules/core/client/views/400.client.view.html",data:{ignoreState:!0}}).state("forbidden",{url:"/forbidden",templateUrl:"modules/core/client/views/403.client.view.html",data:{ignoreState:!0}}).state("cart",{url:"/cart",templateUrl:"modules/products/client/views/view-cart.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","$state","Authentication","Menus","$cookieStore",function($scope,$state,Authentication,Menus,$cookieStore){$scope.$state=$state,$scope.authentication=Authentication,$scope.cart_items=[],$scope.cart_popup="cart_popup.html",$scope.price=0,$scope.menu=Menus.getMenu("topbar"),$scope.isCollapsed=!0,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!0}),$scope.$on("cart_update",function(event,args){var newCartItems=[];""!==args.newCookie?(String(args.newCookie).indexOf("&")>-1?newCartItems=args.newCookie.split("&"):newCartItems[0]=args.newCookie,$scope.cart_items=newCartItems):$scope.cart_items=[],void 0===args.total?$scope.price+=args.price:$scope.price=args.total}),$scope.init_header=function(){var current_items=String($cookieStore.get("cart"));"undefined"!==current_items?$scope.cart_items=current_items.split("&"):$scope.cart_items=[]}}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").controller("CarouselCtrl",["$scope",function($scope){$scope.myInterval=5e3,$scope.noWrapSlides=!1;$scope.slides=[{image:"https://scontent-mia1-1.xx.fbcdn.net/hphotos-xlp1/v/t1.0-9/11220461_973102212753036_5098071536240473268_n.jpg?oh=48f5deb1e654f27fca0d041b739547f2&oe=56F0F6B6"},{image:"https://scontent-mia1-1.xx.fbcdn.net/hphotos-xtf1/v/t1.0-9/12243248_976845205712070_8234193161510904182_n.jpg?oh=308cd8ae189b7f96d483cd4b9ecadea5&oe=56B88437"},{image:"https://scontent-mia1-1.xx.fbcdn.net/hphotos-xap1/v/t1.0-9/12019985_969015559828368_6298243536650081959_n.jpg?oh=1f6ed7a2396076c58abc664d70e954d0&oe=56AE3BF7"},{image:"https://scontent-mia1-1.xx.fbcdn.net/hphotos-xtp1/v/t1.0-9/12243400_980460845350506_2500918501691579590_n.jpg?oh=bb3dd7101955073a3e58b7a0ba27f2cf&oe=56F04EA7"}]}]),angular.module("core").directive("showErrors",["$timeout","$interpolate",function($timeout,$interpolate){var linkFn=function(scope,el,attrs,formCtrl){var inputEl,inputName,inputNgEl,options,showSuccess,toggleClasses,initCheck=!1,showValidationMessages=!1;if(options=scope.$eval(attrs.showErrors)||{},showSuccess=options.showSuccess||!1,inputEl=el[0].querySelector(".form-control[name]")||el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),inputName=$interpolate(inputNgEl.attr("name")||"")(scope),!inputName)throw"show-errors element has no child input elements with a 'name' attribute class";var reset=function(){return $timeout(function(){el.removeClass("has-error"),el.removeClass("has-success"),showValidationMessages=!1},0,!1)};scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},function(invalid){return toggleClasses(invalid)}),scope.$on("show-errors-check-validity",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?(initCheck=!0,showValidationMessages=!0,toggleClasses(formCtrl[inputName].$invalid)):void 0}),scope.$on("show-errors-reset",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?reset():void 0}),toggleClasses=function(invalid){return el.toggleClass("has-error",showValidationMessages&&invalid),showSuccess?el.toggleClass("has-success",showValidationMessages&&!invalid):void 0}};return{restrict:"A",require:"^form",compile:function(elem,attrs){if(-1===attrs.showErrors.indexOf("skipFormGroupCheck")&&!elem.hasClass("form-group")&&!elem.hasClass("input-group"))throw"show-errors element does not have the 'form-group' or 'input-group' class";return linkFn}}}]),angular.module("core").factory("authInterceptor",["$q","$injector",function($q,$injector){return{responseError:function(rejection){if(!rejection.config.ignoreAuthModule)switch(rejection.status){case 401:$injector.get("$state").transitionTo("authentication.signin");break;case 403:$injector.get("$state").transitionTo("forbidden")}return $q.reject(rejection)}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user","admin"],this.menus={};var shouldRender=function(user){if(~this.roles.indexOf("*"))return!0;if(!user)return!1;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exist")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options["class"],roles:null===options.roles||"undefined"==typeof options.roles?this.defaultRoles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.state,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===menuItemState&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].state===submenuItemState&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{roles:["*"]})}]),angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){this.connect=function(){Authentication.user&&(this.socket=io())},this.connect(),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]),angular.module("orders").config(["$stateProvider",function($stateProvider){$stateProvider.state("orders",{"abstract":!0,url:"/checkout/review",template:"<ui-view/>"}).state("orders.review",{url:"",templateUrl:"modules/orders/client/views/review-order.client.view.html"})}]),angular.module("products").controller("OrderController",["$scope","$rootScope","$stateParams","$state","Authentication","Products","$cookieStore","$modal","$window",function($scope,$rootScope,$stateParams,$state,Authentication,Products,$cookieStore,$modal,$window){$scope.user=Authentication.user,$scope.delivery_details=!0,$scope.terms=!1,$scope.cart_items=[],$scope.quantity_dict={},$scope.display_items=[],$scope.cart_total=0,$scope.shipping_price=5,$scope.order_init=function(){var current_items=String($cookieStore.get("cart"));"undefined"!==current_items&&($scope.cart_items=current_items.split("&"),$scope.filter())},$scope.filter=function(){var i=0;for(i=0;i<$scope.cart_items.length;i++){$scope.findOne($scope.cart_items[i],$scope.found_one_cb)}},$scope.found_one_cb=function(data){var priceString=data.price,price=parseFloat(priceString.split("$")[1]);if($scope.cart_total+=price,console.log(data._id),void 0!==$scope.quantity_dict[data._id]){var current_quantity=$scope.quantity_dict[data._id];$scope.quantity_dict[data._id]=current_quantity+1}else $scope.quantity_dict[data._id]=1,$scope.display_items.push(data)},$scope.parse_price=function(priceString){return parseFloat(priceString.split("$")[1])},$scope.findOne=function(_product_id,cb){return Products.get({productId:_product_id},cb)},$scope.open=function(){var modalInstance=$modal.open({animation:!0,templateUrl:"myModalContent.html",size:"lg"}),state_change=$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){modalInstance.close(),state_change()})},$scope.confirm=function(){$scope.terms?$window.open("https://www.paypal.com","_blank"):alert("Please check terms and conditions")}}]),angular.module("products").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Products",state:"products",type:"dropdown",roles:["*"]}),Menus.addSubMenuItem("topbar","products",{title:"All Items",state:"products.list"}),Menus.addSubMenuItem("topbar","products",{title:"Women",state:"products.list"}),Menus.addSubMenuItem("topbar","products",{title:"Men",state:"products.list"}),Menus.addSubMenuItem("topbar","products",{title:"Kid",state:"products.list"}),Menus.addSubMenuItem("topbar","products",{title:"Accessories",state:"products.list"}),Menus.addSubMenuItem("topbar","products",{title:"Clearance",state:"products.list"})}]),angular.module("products").config(["$stateProvider",function($stateProvider){$stateProvider.state("products",{"abstract":!0,url:"/products",template:"<ui-view/>"}).state("products.list",{url:"",templateUrl:"modules/products/client/views/view-products.client.view.html"}).state("products.view",{url:"/:productId",templateUrl:"modules/products/client/views/view-product-info.client.view.html"})}]),angular.module("products").controller("CartController",["$scope","$rootScope","$stateParams","$location","Authentication","Products","$cookieStore",function($scope,$rootScope,$stateParams,$location,Authentication,Products,$cookieStore){$scope.authentication=Authentication,$scope.editing_index=-1,$scope.cart_items=[],$scope.cart_total=0,$scope.display_items=[],$scope.cart_products=[],$scope.quantity_dict={},$scope.getItems=function(){var current_items=String($cookieStore.get("cart"));"undefined"!==current_items&&($scope.cart_items=current_items.split("&"),$scope.filter())},$scope.filter=function(){var i=0;for(i=0;i<$scope.cart_items.length;i++){$scope.findOne($scope.cart_items[i],$scope.found_one_cb)}},$scope.found_one_cb=function(data){var priceString=data.price,price=parseFloat(priceString.split("$")[1]);if($scope.cart_total+=price,void 0!==$scope.quantity_dict[data._id]){var current_quantity=$scope.quantity_dict[data._id];$scope.quantity_dict[data._id]=current_quantity+1}else $scope.quantity_dict[data._id]=1,$scope.display_items.push(data)},$scope.parse_price=function(priceString){return parseFloat(priceString.split("$")[1])},$scope.findOne=function(_product_id,cb){return Products.get({productId:_product_id},cb)},$scope.save_edit_cart=function(_id,updated_quantity,price){if(void 0!==updated_quantity){var current_quantity=$scope.quantity_dict[_id];if(current_quantity!==updated_quantity){if($scope.quantity_dict[_id]=updated_quantity,current_quantity>updated_quantity){var num_to_delete=current_quantity-updated_quantity;$scope.cart_items.sort();var index=$scope.cart_items.indexOf(_id);$scope.cart_items.splice(index,num_to_delete),$scope.cart_total-=num_to_delete*price}else{for(var num_to_add=updated_quantity-current_quantity,i=0;num_to_add>i;i++)$scope.cart_items.push(_id);$scope.cart_total+=num_to_add*price}$cookieStore.remove("cart"),$cookieStore.put("cart",$scope.cart_items.join("&")),$rootScope.$broadcast("cart_update",{newCookie:$scope.cart_items.join("&"),total:$scope.cart_total})}}$scope.editing_index=-1},$scope.start_edit=function(index){$scope.editing_index=index},$scope.quick_delete_cart=function(productId,quantity,index_to_delete){$scope.cart_items.sort();for(var index=0;index<$scope.cart_items.length;index++)if($scope.cart_items[index]===productId){$scope.cart_items.splice(index,quantity);break}var deleted_product=$scope.display_items[index_to_delete],deleted_price=quantity*parseFloat(deleted_product.price.split("$")[1]);$scope.cart_total-=deleted_price,$scope.display_items.splice(index_to_delete,1),$cookieStore.remove("cart"),0!==$scope.display_items.length?($cookieStore.put("cart",$scope.cart_items.join("&")),$rootScope.$broadcast("cart_update",{newCookie:$scope.cart_items.join("&"),total:$scope.cart_total})):$rootScope.$broadcast("cart_update",{newCookie:"",total:0})}}]),angular.module("products").controller("ProductViewController",["$scope","$stateParams","$location","Authentication","Products",function($scope,$stateParams,$location,Authentication,Products){$scope.authentication=Authentication,$scope.this_product_id=$stateParams.productId,$scope.this_product=Products.get({productId:$scope.this_product_id},function(){console.log($scope.this_product)}),$scope.admin=!1,$scope.getRating=function(){for(var sum=0,i=0;i<$scope.this_product.reviews.length;i++)sum+=parseInt($scope.this_product.reviews[i],10);return sum/$scope.this_product.reviews.length},$scope.addSize=function(){$scope.this_product.sizes.push("New Size")},$scope.removeSize=function(_index){$scope.this_product.sizes.splice(_index,1)},Array.prototype.remove=function(){for(var what,ax,a=arguments,L=a.length;L&&this.length;)for(what=a[--L];-1!==(ax=this.indexOf(what));)this.splice(ax,1);return this},$scope.saveChanges=function(){$scope.this_product.$update(function(response){console.log("Saved changes"),console.log($scope.this_product.name),console.log(response)},function(errorResponse){console.log("Error when trying to save changes!"),console.log($scope.this_product.name),console.log(errorResponse)})}}]),angular.module("products").controller("ProductsController",["$scope","$rootScope","$stateParams","$state","Authentication","Products","$cookieStore",function($scope,$rootScope,$stateParams,$state,Authentication,Products,$cookieStore){$scope.authentication=Authentication,$scope.success_add=!1,$scope.products=[],$scope.init_product=function(){console.log("hi"),$scope.products=Products.query(),console.log($scope.products)},$scope.add_cart=function(_id,price){var prevCookie="";prevCookie=$cookieStore.get("cart");var updatedCookie=_id;void 0!==prevCookie&&($cookieStore.remove("cart"),updatedCookie=prevCookie+"&"+_id),$cookieStore.put("cart",updatedCookie),$rootScope.$broadcast("cart_update",{newCookie:updatedCookie,price:parseFloat(price.split("$")[1])}),$state.go("cart")},$scope.create=function(){var product=new Products({name:"New Product",code:"NOCODE",reviews:[],price:"$0.00",reward_price:"0",reward_points:"0",description:"No description.",availability:"Out of stock",sizes:["S","M","L"]});product.$save(function(response){console.log("saved")},function(errorResponse){console.log("errored")})}}]),angular.module("products").factory("Products",["$resource",function($resource){return $resource("api/products/:productId",{productId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users.admin").run(["Menus",function(Menus){Menus.addSubMenuItem("topbar","admin",{title:"Manage Users",state:"admin.users"})}]),angular.module("users.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin.users",{url:"/users",templateUrl:"modules/users/client/views/admin/list-users.client.view.html",controller:"UserListController"}).state("admin.user",{url:"/users/:userId",templateUrl:"modules/users/client/views/admin/view-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}}).state("admin.user-edit",{url:"/users/:userId/edit",templateUrl:"modules/users/client/views/admin/edit-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/client/views/settings/settings.client.view.html",data:{roles:["user","admin"]}}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/client/views/settings/edit-profile.client.view.html"}).state("settings.address",{url:"/address",templateUrl:"modules/users/client/views/settings/edit-addresses.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/client/views/settings/change-password.client.view.html"}).state("settings.order-history",{url:"/order-history",templateUrl:"modules/users/client/views/settings/order-history.client.view.html"}).state("settings.wish-list",{url:"/wish-list",templateUrl:"modules/users/client/views/settings/wish-list.client.view.html"}).state("settings.downloads",{url:"/downloads",templateUrl:"modules/users/client/views/settings/downloads.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/client/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/client/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/client/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/client/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin?err",templateUrl:"modules/users/client/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/client/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/client/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/client/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/client/views/password/reset-password.client.view.html"})}]),angular.module("users.admin").controller("UserListController",["$scope","$filter","Admin",function($scope,$filter,Admin){Admin.query(function(data){$scope.users=data,$scope.buildPager()}),$scope.buildPager=function(){$scope.pagedItems=[],$scope.itemsPerPage=15,$scope.currentPage=1,$scope.figureOutItemsToDisplay()},$scope.figureOutItemsToDisplay=function(){$scope.filteredItems=$filter("filter")($scope.users,{$:$scope.search}),$scope.filterLength=$scope.filteredItems.length;var begin=($scope.currentPage-1)*$scope.itemsPerPage,end=begin+$scope.itemsPerPage;$scope.pagedItems=$scope.filteredItems.slice(begin,end)},$scope.pageChanged=function(){$scope.figureOutItemsToDisplay()}}]),angular.module("users.admin").controller("UserController",["$scope","$state","Authentication","userResolve",function($scope,$state,Authentication,userResolve){$scope.authentication=Authentication,$scope.user=userResolve,$scope.remove=function(user){confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),$scope.users.splice($scope.users.indexOf(user),1)):$scope.user.$remove(function(){$state.go("admin.users")}))},$scope.update=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=$scope.user;user.$update(function(){$state.go("admin.user",{userId:user._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("users").controller("AuthenticationController",["$scope","$state","$http","$location","$window","Authentication","PasswordValidator",function($scope,$state,$http,$location,$window,Authentication,PasswordValidator){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.error=$location.search().err,$scope.authentication.user&&$location.path("/"),$scope.signup=function(isValid){return $scope.error=null,isValid?void $http.post("/api/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.signin=function(isValid){return $scope.error=null,isValid?void $http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.callOauthProvider=function(url){$state.previous&&$state.previous.href&&(url+="?redirect_to="+encodeURIComponent($state.previous.href)),$window.location.href=url}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication","PasswordValidator",function($scope,$stateParams,$http,$location,Authentication,PasswordValidator){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","forgotPasswordForm"),!1)},$scope.resetUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","resetPasswordForm"),!1)}}]),angular.module("users").controller("ChangePasswordController",["$scope","$http","Authentication","PasswordValidator",function($scope,$http,Authentication,PasswordValidator){$scope.user=Authentication.user,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.changeUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/users/password",$scope.passwordDetails).success(function(response){$scope.$broadcast("show-errors-reset","passwordForm"),$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","passwordForm"),!1)}}]),angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]),angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if($scope.success=$scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=new Users($scope.user);user.$update(function(response){$scope.$broadcast("show-errors-reset","userForm"),$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}}]),angular.module("users").controller("SocialAccountsController",["$scope","$http","Authentication",function($scope,$http,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","Authentication",function($scope,Authentication){$scope.user=Authentication.user}]),angular.module("users").directive("passwordValidator",["PasswordValidator",function(PasswordValidator){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.unshift(function(password){var result=PasswordValidator.getResult(password),strengthIdx=0,strengthMeter=[{color:"danger",progress:"20"},{color:"warning",progress:"40"},{color:"info",progress:"60"},{color:"primary",progress:"80"},{color:"success",progress:"100"}];strengthMeter.length;return result.errors.length<strengthMeter.length&&(strengthIdx=strengthMeter.length-result.errors.length-1),scope.strengthColor=strengthMeter[strengthIdx].color,scope.strengthProgress=strengthMeter[strengthIdx].progress,result.errors.length?(scope.popoverMsg=PasswordValidator.getPopoverMsg(),scope.passwordErrors=result.errors,void modelCtrl.$setValidity("strength",!1)):(scope.popoverMsg="",modelCtrl.$setValidity("strength",!0),password)})}}}]),angular.module("users").directive("passwordVerify",function(){return{require:"ngModel",scope:{passwordVerify:"="},link:function(scope,element,attrs,modelCtrl){scope.$watch(function(){var combined;return(scope.passwordVerify||modelCtrl.$viewValue)&&(combined=scope.passwordVerify+"_"+modelCtrl.$viewValue),combined},function(value){value&&modelCtrl.$parsers.unshift(function(viewValue){
var origin=scope.passwordVerify;return origin!==viewValue?void modelCtrl.$setValidity("passwordVerify",!1):(modelCtrl.$setValidity("passwordVerify",!0),viewValue)})})}}}),angular.module("users").directive("lowercase",function(){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(input){return input?input.toLowerCase():""}),element.css("text-transform","lowercase")}}}),angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]),angular.module("users").factory("PasswordValidator",["$window",function($window){var owaspPasswordStrengthTest=$window.owaspPasswordStrengthTest;return{getResult:function(password){var result=owaspPasswordStrengthTest.test(password);return result},getPopoverMsg:function(){var popoverMsg="Please enter a passphrase or password with greater than 10 characters, numbers, lowercase, upppercase, and special characters.";return popoverMsg}}}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]),angular.module("users.admin").factory("Admin",["$resource",function($resource){return $resource("api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]);